{"version":3,"sources":["parcels.js"],"names":["router","express","Router","post","req","res","console","log","body","userId","parcel","priceNormal","priceExpress","price","user","User","filter","customer","calculatePrice","pricePerOneWeight","weight","height","length","From","Service","pId","Parcels","parcelWith","parcelId","status","push","json","success","message","Number","toFixed","get","parcelDeliveries","map","parcels","parcelDelivery","params","put","index","i","send"],"mappings":"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","file":"parcels.js","sourceRoot":"/home/emmanuel/Projects/SelfProject/sendit/src/routes","sourcesContent":["import express from 'express';\nimport Parcels from '../data/parcels';\nimport User from '../data/users';\n\nconst router = express.Router();\n\n// Create parcel\nrouter.post('/', (req, res) => {\n  console.log(req.body);\n  const { userId, parcel } = req.body;\n  const priceNormal = 20; // Price in $\n  const priceExpress = 70;\n  // Parcel price in $\n  let price;\n\n  const user = User.filter(customer => customer.userId === userId)[0];\n\n  const calculatePrice = pricePerOneWeight => (\n    (pricePerOneWeight * parcel.weight * parcel.height * parcel.length)\n  );\n  if (user) {\n    // Price per Service on Normal\n    // Price per Service on Express\n    price = parcel.From === parcel.Service\n      ? calculatePrice(priceNormal)\n      : calculatePrice(priceExpress);\n    // Parcel Id\n    const pId = Parcels.length + 1;\n    const parcelWith = parcel;\n    parcelWith.parcelId = pId;\n    parcelWith.status = 'Pending';\n\n    // Save parcel\n    Parcels.push({ userId, price, parcel: parcelWith });\n\n    console.log(Parcels);\n    return res.status(201).json({\n      success: true,\n      message: 'Parcel created successfully',\n      parcelId: pId,\n      price: Number(price.toFixed(2)),\n    });\n  }\n\n  return res.status(404).json({\n    success: false,\n    message: 'User not Exist',\n  });\n});\n\n// Get all parcels\nrouter.get('/', (req, res) => {\n  const parcelDeliveries = [];\n  console.log(Parcels);\n  Parcels.map(parcel => parcelDeliveries.push(parcel.parcel));\n  res.status(200).json({\n    success: true,\n    message: 'Parcels retrieved successfully',\n    parcels: parcelDeliveries,\n  });\n});\n\n// Get a specific parcels\nrouter.get('/:parcelId', (req, res) => {\n  const parcelDelivery = Parcels.filter(\n    parcel => parcel.parcel.parcelId === Number(req.params.parcelId),\n  );\n\n  if (parcelDelivery.length > 0) {\n    return res.status(200).json({\n      success: true,\n      message: `Parcel of id ${req.params.parcelId} retrieved successfully`,\n      parcel: parcelDelivery[0],\n    });\n  }\n  return res.status(404).json({\n    success: false,\n    message: `Parcel of id ${req.params.parcelId} does not exist`,\n  });\n});\n\n// Cancel a parcel delivery order\nrouter.put('/:parcelId/cancel', (req, res) => {\n  let parcelDelivery = {};\n  let index;\n  req.params.parcelId = Number(req.params.parcelId);\n  for (let i = 0; i < Parcels.length; i += 1) {\n    if (Parcels[i].parcel.parcelId === req.params.parcelId) {\n      parcelDelivery = Parcels[i].parcel;\n      index = i;\n      break;\n    }\n  }\n\n  if (parcelDelivery) {\n    if (\n      parcelDelivery.status === 'pending' || parcelDelivery.status === 'canceled'\n    ) {\n      parcelDelivery.status = 'canceled';\n      if (Parcels[index].parcel.parcelId === parcelDelivery.parcelId) {\n        Parcels[index].parcel.status = 'canceled';\n        return res.status(200).send({\n          success: true,\n          message: 'Parcel is successfully canceled',\n          parcel: parcelDelivery,\n        });\n      }\n      return res.status(405).send({\n        success: false,\n        message: 'Data index changed. Try again!',\n      });\n    }\n    return res.status(405).send({\n      success: false,\n      message:\n        'Not allowed to cancel a parcel with status of delivered or transit',\n    });\n  }\n  return res.status(404).send({\n    success: false,\n    message: 'Parcel not found',\n  });\n});\n\nexport default router;\n"]}