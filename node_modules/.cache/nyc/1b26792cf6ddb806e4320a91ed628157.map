{"version":3,"sources":["create_parcels_test.spec.js"],"names":["chai","use","chaiHttp","parcel","userId","parcelId","weigth","height","width","length","From","stateFrom","To","stateTo","services","status","request","app","post","send","then","res","to","have","body","be","an","property","eql"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAGA;AACA;;AAEAA,eAAKC,GAAL,CAASC,kBAAT;;AAEA,qBAAS,kBAAT,EAA6B,YAAM;AACjC,uBAAS,cAAT,EAAyB,YAAM;AAC/B;AACE,mBAAG,wBAAH,EAA6B,YAAM;AACjC,UAAMC,SAAS;AACbC,gBAAQ,CADK;AAEbD,gBAAQ;AACNE,oBAAU,CADJ;AAENC,kBAAQ,EAFF;AAGNC,kBAAQ,EAHF;AAINC,iBAAO,EAJD;AAKNC,kBAAQ,EALF;AAMNC,gBAAM,QANA;AAONC,qBAAW,UAPL;AAQNC,cAAI,QARE;AASNC,mBAAS,SATH;AAUNC,oBAAU,SAVJ;AAWNC,kBAAQ;AAXF;AAFK,OAAf;AAgBAf,qBAAKgB,OAAL,CAAaC,aAAb,EACGC,IADH,CACQ,kBADR,EAEGC,IAFH,CAEQhB,MAFR,EAGGiB,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,0BAAOA,GAAP,EAAYC,EAAZ,CAAeC,IAAf,CAAoBR,MAApB,CAA2B,GAA3B;AACA,0BAAOM,IAAIG,IAAX,EAAiBF,EAAjB,CAAoBG,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACA,0BAAOL,IAAIG,IAAX,EAAiBF,EAAjB,CAAoBC,IAApB,CAAyBI,QAAzB,CAAkC,SAAlC,EAA6CC,GAA7C,CAAiD,IAAjD;AACA,0BAAOP,IAAIG,IAAX,EAAiBF,EAAjB,CAAoBC,IAApB,CAAyBI,QAAzB,CAAkC,UAAlC;AACA,0BAAON,IAAIG,IAAX,EAAiBF,EAAjB,CAAoBC,IAApB,CAAyBI,QAAzB,CAAkC,OAAlC;AACD,OATH;AAUD,KA3BD;;AA6BA;AACA,mBAAG,6BAAH,EAAkC,YAAM;AACtC,UAAMxB,SAAS;AACbC,gBAAQ,iBADK;AAEbD,gBAAQ;AACNE,oBAAU,CADJ;AAENC,kBAAQ,EAFF;AAGNC,kBAAQ,EAHF;AAINC,iBAAO,EAJD;AAKNC,kBAAQ,EALF;AAMNC,gBAAM,QANA;AAONC,qBAAW,UAPL;AAQNC,cAAI,QARE;AASNC,mBAAS,SATH;AAUNC,oBAAU,SAVJ;AAWNC,kBAAQ;AAXF;AAFK,OAAf;AAgBAf,qBAAKgB,OAAL,CAAaC,aAAb,EACGC,IADH,CACQ,kBADR,EAEGC,IAFH,CAEQhB,MAFR,EAGGiB,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,0BAAOA,GAAP,EAAYC,EAAZ,CAAeC,IAAf,CAAoBR,MAApB,CAA2B,GAA3B;AACA,0BAAOM,IAAIG,IAAX,EAAiBF,EAAjB,CAAoBG,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACA,0BAAOL,IAAIG,IAAX,EAAiBF,EAAjB,CAAoBC,IAApB,CAAyBI,QAAzB,CAAkC,SAAlC,EAA6CC,GAA7C,CAAiD,KAAjD;AACD,OAPH;AAQD,KAzBD;AA0BD,GA1DD;AA2DD,CA5DD","file":"create_parcels_test.spec.js","sourceRoot":"/home/emmanuel/Projects/SelfProject/sendit/src/test","sourcesContent":["import chaiHttp from 'chai-http';\nimport chai, { expect } from 'chai';\nimport { describe, it } from 'mocha';\nimport app from '../app';\n\n\n// const pid = '98bdf263-a37b-433b-81f7-f557a74fdb85';\n// const url = 'http://localhost:5000';\n\nchai.use(chaiHttp);\n\ndescribe('SendIT API TESTS', () => {\n  describe('POST/ Parcel', () => {\n  // Parcel should be created\n    it('should create a parcel', () => {\n      const parcel = {\n        userId: 1,\n        parcel: {\n          parcelId: 1,\n          weigth: 40,\n          height: 80,\n          width: 40,\n          length: 90,\n          From: 'Kigali',\n          stateFrom: 'Kicukiro',\n          To: 'Rusizi',\n          stateTo: 'Muhondo',\n          services: 'Express',\n          status: 'delivered',\n        },\n      };\n      chai.request(app)\n        .post('/api/v1/parcels/')\n        .send(parcel)\n        .then((res) => {\n          expect(res).to.have.status(201);\n          expect(res.body).to.be.an('object');\n          expect(res.body).to.have.property('success').eql(true);\n          expect(res.body).to.have.property('parcelId');\n          expect(res.body).to.have.property('price');\n        });\n    });\n\n    // ASSIGN parcel to no exist User\n    it('should return user not exit', () => {\n      const parcel = {\n        userId: 'INVALID_USER_ID',\n        parcel: {\n          parcelId: 1,\n          weigth: 40,\n          height: 80,\n          width: 40,\n          length: 90,\n          From: 'Kigali',\n          stateFrom: 'Kicukiro',\n          To: 'Rusizi',\n          stateTo: 'Muhondo',\n          services: 'Express',\n          status: 'delivered',\n        },\n      };\n      chai.request(app)\n        .post('/api/v1/parcels/')\n        .send(parcel)\n        .then((res) => {\n          expect(res).to.have.status(404);\n          expect(res.body).to.be.an('object');\n          expect(res.body).to.have.property('success').eql(false);\n        });\n    });\n  });\n});\n"]}