{"version":3,"sources":["parcels.js"],"names":["router","express","Router","post","req","res","body","userId","parcel","priceNormal","priceExpress","priceIsForParcelAreaLimit","area","height","length","width","price","user","User","filter","customer","calculatePrice","pricePerOneWeight","weight","quantity","From","To","pId","Parcels","parcelWith","parcelId","status","push","console","log","json","success","message","Number","toFixed","get","parcelDeliveries","map","parcels","parcelDelivery","params","put","index","i","send"],"mappings":"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","file":"parcels.js","sourceRoot":"/home/emmanuel/Projects/SelfProject/sendit/src/routes","sourcesContent":["import express from 'express';\nimport Parcels from '../data/parcels';\nimport User from '../data/users';\n\nconst router = express.Router();\n\n// Create parcel\nrouter.post('/', (req, res) => {\n  const { userId, parcel } = req.body;\n  const priceNormal = 20; // Price in $\n  const priceExpress = 70;\n  const priceIsForParcelAreaLimit = 2706; // Area is in cm\n  // area of a parcel\n  const area = parcel.height * parcel.length * 2 + parcel.width * parcel.height * 2\n    + parcel.length * parcel.width * 2;\n\n  // Parcel price in $\n  let price;\n\n  const user = User.filter(customer => customer.userId === userId)[0];\n\n  const calculatePrice = (pricePerOneWeight) => {\n    // Parcel area is not exceed\n    if (area <= priceIsForParcelAreaLimit) {\n      return pricePerOneWeight * parcel.weight * parcel.quantity;\n    }\n    // Parcel area exceed\n    return (\n      (pricePerOneWeight * parcel.weight * parcel.quantity * area) / priceIsForParcelAreaLimit\n    );\n  };\n\n  if (user) {\n    // Price per Service on Normal\n    // Price per Service on Express\n    price = parcel.From === parcel.To\n      ? calculatePrice(priceNormal)\n      : calculatePrice(priceExpress);\n    // Parcel Id\n    const pId = Parcels.length + 1;\n    const parcelWith = parcel;\n    parcelWith.parcelId = pId;\n    parcelWith.status = 'booking';\n\n    // Save parcel\n    Parcels.push({ userId, price, parcel: parcelWith });\n\n    console.log(Parcels);\n    return res.status(201).json({\n      success: true,\n      message: 'Parcel created successfully',\n      parcelId: pId,\n      price: Number(price.toFixed(2)),\n    });\n  }\n\n  return res.status(404).json({\n    success: false,\n    message: 'User not Exist',\n  });\n});\n\n// Get all parcels\nrouter.get('/', (req, res) => {\n  const parcelDeliveries = [];\n  console.log(Parcels);\n  Parcels.map(parcel => parcelDeliveries.push(parcel.parcel));\n  res.status(200).json({\n    success: true,\n    message: 'Parcels retrieved successfully',\n    parcels: parcelDeliveries,\n  });\n});\n\n// Get a specific parcels\nrouter.get('/:parcelId', (req, res) => {\n  const parcelDelivery = Parcels.filter(\n    parcel => parcel.parcel.parcelId === Number(req.params.parcelId),\n  );\n\n  if (parcelDelivery.length > 0) {\n    return res.status(200).json({\n      success: true,\n      message: `Parcel of id ${req.params.parcelId} retrieved successfully`,\n      parcel: parcelDelivery[0],\n    });\n  }\n  return res.status(404).json({\n    success: false,\n    message: `Parcel of id ${req.params.parcelId} does not exist`,\n  });\n});\n\n// Cancel a parcel delivery order\nrouter.put('/:parcelId/cancel', (req, res) => {\n  let parcelDelivery = {};\n  let index;\n  req.params.parcelId = Number(req.params.parcelId);\n  for (let i = 0; i < Parcels.length; i += 1) {\n    if (Parcels[i].parcel.parcelId === req.params.parcelId) {\n      parcelDelivery = Parcels[i].parcel;\n      index = i;\n      break;\n    }\n  }\n\n  if (parcelDelivery) {\n    if (\n      parcelDelivery.status === 'pending' || parcelDelivery.status === 'canceled'\n    ) {\n      parcelDelivery.status = 'canceled';\n      if (Parcels[index].parcel.parcelId === parcelDelivery.parcelId) {\n        Parcels[index].parcel.status = 'canceled';\n        return res.status(200).send({\n          success: true,\n          message: 'Parcel is successfully canceled',\n          parcel: parcelDelivery,\n        });\n      }\n      return res.status(405).send({\n        success: false,\n        message: 'Data index changed. Try again!',\n      });\n    }\n    return res.status(405).send({\n      success: false,\n      message:\n        'Not allowed to cancel a parcel with status of delivered or transit',\n    });\n  }\n  return res.status(404).send({\n    success: false,\n    message: 'Parcel not found',\n  });\n});\n\nexport default router;\n"]}